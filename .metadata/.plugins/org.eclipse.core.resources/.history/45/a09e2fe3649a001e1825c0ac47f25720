package com.thinkconstructive.restdemo.service;

import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.mockito.ArgumentMatchers.anyList;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.mockito.stubbing.Answer;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;

import com.thinkconstructive.restdemo.controller.CloudController;
import com.thinkconstructive.restdemo.exception.CloudVendorNotFoundException;
import com.thinkconstructive.restdemo.model.CloudVendor;
import com.thinkconstructive.restdemo.repository.CloudRepository;
import com.thinkconstructive.restdemo.service.CloudService;

@WebMvcTest(value = CloudController.class)
public class CloudServiceTest {
 
	@MockBean
	private CloudRepository cloudRepository;
	
	@Autowired
	private CloudService cloudService;
	
	
	CloudVendor cloudVendor;
	
	@BeforeEach
	void setup()
	{
		
	}
	
	@AfterEach
	void tearDown()
	{
		
	}
	
	@Test
	void getCloudVendorDetails() {
		List<CloudVendor> list=new ArrayList();
//		when(cloudRepository.findAll()).then((Answer<?>) list);
//		assertTrue(Objects.nonNull(list));
		when(cloudService.getCloudVendorDetails()).then((Answer<?>) list);
		assertTrue(Objects.nonNull(list));
	}

	@Test
	void getCloudVendorById() {
	}

	@Test
	void getVendorByName() {

	}

	@Test
	void addCloudVendor() {

	}

	@Test
	void updateById() {

	}

	@Test
	void deleteById() {

	}
}
