package com.thinkconstructive.restdemo.controller;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

import java.util.List;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.mock.web.MockHttpServletResponse;
import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.ResultActions;

import com.thinkconstructive.restdemo.model.CloudVendor;
import com.thinkconstructive.restdemo.service.CloudService;

import netscape.javascript.JSObject;

@WebMvcTest(value = CloudController.class)
public class CloudControllerTest {
	
	@MockBean          // it is used to create mock bean  mocking means creating dummy object
	private CloudService cloudService;
	
	@Autowired
	private MockMvc mockMvc;  // it is used to send the request
	
	@Test
	public void testGetCloudVendorDetails() throws Exception
	{
		List<CloudVendor> list=null;
		when(cloudService.getCloudVendorDetails()).thenReturn(list);
		
//		MockHttpServletRequestBuilder requestBuilder =MockMvcRequestBuilders.get("/cloudvendors");  // here request gets created
		
//		ResultActions resultActions= mockMvc.perform(requestBuilder);
//		MvcResult mvcResult=  resultActions.andReturn();
//		MockHttpServletResponse response=mvcResult.getResponse();
//		assertEquals(4096, response.getBufferSize());
//		assertEquals(200, response.getStatus());	
		
		mockMvc.perform(MockMvcRequestBuilders.get("/cloudvendors"))
        .andExpect(
            result -> {
                MockHttpServletResponse response = result.getResponse();
               // assertEquals(4096, response.getBufferSize());
                assertEquals(201, response.getStatus());
                // Add more assertions if needed
            }
        );

	}

}
